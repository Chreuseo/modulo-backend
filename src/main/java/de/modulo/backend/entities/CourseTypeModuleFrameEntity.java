package de.modulo.backend.entities;

import jakarta.persistence.*;
import lombok.Data;

import java.io.Serializable;

@Entity
@Table(name = "course_type_module_frame")
@Data
public class CourseTypeModuleFrameEntity {

    @EmbeddedId
    private CourseTypeModuleFrameId id; // Use the embedded ID

    @ManyToOne
    @JoinColumn(name = "course_type_id", insertable = false, updatable = false) // Relates to your CourseTypeEntity
    private CourseTypeEntity courseType;

    @ManyToOne
    @JoinColumn(name = "module_frame_id", insertable = false, updatable = false) // Relates to your ModuleFrameEntity
    private ModuleFrameEntity moduleFrame;

    @Embeddable
    @Data // Lombok generates getters, setters, equals, hashCode, and toString
    public static class CourseTypeModuleFrameId implements Serializable {
        private Long courseType;   // This should correspond to `CourseTypeEntity` ID
        private Long moduleFrame;  // This should correspond to `ModuleFrameEntity` ID

        // Default constructor
        public CourseTypeModuleFrameId() {}

        // Constructor for creating instances of the composite key
        public CourseTypeModuleFrameId(Long courseType, Long moduleFrame) {
            this.courseType = courseType;
            this.moduleFrame = moduleFrame;
        }

        // equals() and hashCode() are generated by Lombok's @Data
    }
}
