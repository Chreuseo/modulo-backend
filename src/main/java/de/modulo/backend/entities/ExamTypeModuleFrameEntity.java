package de.modulo.backend.entities;

import lombok.Data;

import jakarta.persistence.*;

import java.io.Serializable;

@Entity
@Table(name = "exam_type_module_frame_entity")
@Data
public class ExamTypeModuleFrameEntity {

    @EmbeddedId
    private ExamTypeModuleFrameId id; // Use the embedded ID


    @ManyToOne // Relationship with ExamTypeEntity
    @JoinColumn(name = "exam_type_id", nullable = false)
    private ExamTypeEntity examType;

    @ManyToOne // Relationship with ModuleFrameEntity
    @JoinColumn(name = "module_frame_id", nullable = false)
    private ModuleFrameEntity moduleFrame;

    private boolean mandatory;

    @Embeddable
    @Data // Lombok generates getters, setters, equals, hashCode, and toString
    public static class ExamTypeModuleFrameId implements Serializable {
        private Long examType;   // This should correspond to `CourseTypeEntity` ID
        private Long moduleFrame;  // This should correspond to `ModuleFrameEntity` ID

        // Default constructor
        public ExamTypeModuleFrameId() {}

        // Constructor for creating instances of the composite key
        public ExamTypeModuleFrameId(Long courseType, Long moduleFrame) {
            this.examType = courseType;
            this.moduleFrame = moduleFrame;
        }

        // equals() and hashCode() are generated by Lombok's @Data
    }

    // Additional methods or annotations can be added if needed
}
